{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marks\\\\IdeaProjects\\\\Project-OS\\\\frontend\\\\src\\\\pages\\\\ProducerConsumer.js\",\n  _s = $RefreshSig$();\n// src/pages/ProducerConsumer.js\nimport React, { useState, useEffect } from 'react';\nimport './ProducerConsumer.css'; // CSS específico para este componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProducerConsumer() {\n  _s();\n  const [numProducers, setNumProducers] = useState(2);\n  const [numConsumers, setNumConsumers] = useState(2);\n  const [bufferSize, setBufferSize] = useState(5);\n  const [buffer, setBuffer] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n\n  // Inicializa o buffer visual\n  useEffect(() => {\n    setBuffer(Array(bufferSize).fill({\n      state: 'empty',\n      item: null\n    }));\n  }, [bufferSize]);\n  const handleStart = () => {\n    setIsRunning(true);\n    // TODO: Chamar o endpoint do backend para iniciar a simulação.\n    // O backend começaria a enviar atualizações do estado do buffer\n    // (idealmente via WebSocket) que seriam capturadas aqui para\n    // atualizar o estado 'buffer'.\n    console.log(\"Iniciando simulação com:\", {\n      numProducers,\n      numConsumers,\n      bufferSize\n    });\n\n    // Simulação de exemplo no frontend para visualização:\n    // A cada segundo, um produtor tenta adicionar um item.\n    // Esta lógica DEVE ser movida para o backend.\n    const interval = setInterval(() => {\n      setBuffer(prevBuffer => {\n        const newBuffer = [...prevBuffer];\n        const emptyIndex = newBuffer.findIndex(slot => slot.state === 'empty');\n        if (emptyIndex !== -1) {\n          newBuffer[emptyIndex] = {\n            state: 'full',\n            item: Math.floor(Math.random() * 100)\n          };\n        }\n        return newBuffer;\n      });\n    }, 1000);\n\n    // Limpeza ao parar a simulação\n    return () => clearInterval(interval);\n  };\n  const handleStop = () => {\n    setIsRunning(false);\n    // TODO: Chamar endpoint para parar a simulação\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"M\\xF3dulo 3: Problema do Produtor-Consumidor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Produtores: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numProducers,\n          onChange: e => setNumProducers(Number(e.target.value)),\n          min: \"1\",\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Consumidores: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numConsumers,\n          onChange: e => setNumConsumers(Number(e.target.value)),\n          min: \"1\",\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tamanho do Buffer: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bufferSize,\n          onChange: e => setBufferSize(Number(e.target.value)),\n          min: \"1\",\n          disabled: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        disabled: isRunning,\n        children: \"Iniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        disabled: !isRunning,\n        children: \"Parar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Buffer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buffer-container\",\n      children: buffer.map((slot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `buffer-slot ${slot.state}`,\n        children: slot.state === 'full' ? slot.item : ''\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(ProducerConsumer, \"5C2quVU9s9wm2+qSy69eMu5u7cI=\");\n_c = ProducerConsumer;\nexport default ProducerConsumer;\nvar _c;\n$RefreshReg$(_c, \"ProducerConsumer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProducerConsumer","_s","numProducers","setNumProducers","numConsumers","setNumConsumers","bufferSize","setBufferSize","buffer","setBuffer","isRunning","setIsRunning","Array","fill","state","item","handleStart","console","log","interval","setInterval","prevBuffer","newBuffer","emptyIndex","findIndex","slot","Math","floor","random","clearInterval","handleStop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","Number","target","min","disabled","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/marks/IdeaProjects/Project-OS/frontend/src/pages/ProducerConsumer.js"],"sourcesContent":["// src/pages/ProducerConsumer.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './ProducerConsumer.css'; // CSS específico para este componente\r\n\r\nfunction ProducerConsumer() {\r\n    const [numProducers, setNumProducers] = useState(2);\r\n    const [numConsumers, setNumConsumers] = useState(2);\r\n    const [bufferSize, setBufferSize] = useState(5);\r\n    const [buffer, setBuffer] = useState([]);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n\r\n    // Inicializa o buffer visual\r\n    useEffect(() => {\r\n        setBuffer(Array(bufferSize).fill({ state: 'empty', item: null }));\r\n    }, [bufferSize]);\r\n\r\n    const handleStart = () => {\r\n        setIsRunning(true);\r\n        // TODO: Chamar o endpoint do backend para iniciar a simulação.\r\n        // O backend começaria a enviar atualizações do estado do buffer\r\n        // (idealmente via WebSocket) que seriam capturadas aqui para\r\n        // atualizar o estado 'buffer'.\r\n        console.log(\"Iniciando simulação com:\", { numProducers, numConsumers, bufferSize });\r\n\r\n        // Simulação de exemplo no frontend para visualização:\r\n        // A cada segundo, um produtor tenta adicionar um item.\r\n        // Esta lógica DEVE ser movida para o backend.\r\n        const interval = setInterval(() => {\r\n            setBuffer(prevBuffer => {\r\n                const newBuffer = [...prevBuffer];\r\n                const emptyIndex = newBuffer.findIndex(slot => slot.state === 'empty');\r\n                if (emptyIndex !== -1) {\r\n                    newBuffer[emptyIndex] = { state: 'full', item: Math.floor(Math.random() * 100) };\r\n                }\r\n                return newBuffer;\r\n            });\r\n        }, 1000);\r\n\r\n        // Limpeza ao parar a simulação\r\n        return () => clearInterval(interval);\r\n    };\r\n\r\n    const handleStop = () => {\r\n        setIsRunning(false);\r\n        // TODO: Chamar endpoint para parar a simulação\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Módulo 3: Problema do Produtor-Consumidor</h1>\r\n            <div className=\"control-panel\">\r\n                <label>Produtores: <input type=\"number\" value={numProducers} onChange={e => setNumProducers(Number(e.target.value))} min=\"1\" disabled={isRunning} /></label>\r\n                <label>Consumidores: <input type=\"number\" value={numConsumers} onChange={e => setNumConsumers(Number(e.target.value))} min=\"1\" disabled={isRunning} /></label>\r\n                <label>Tamanho do Buffer: <input type=\"number\" value={bufferSize} onChange={e => setBufferSize(Number(e.target.value))} min=\"1\" disabled={isRunning} /></label>\r\n                <button onClick={handleStart} disabled={isRunning}>Iniciar</button>\r\n                <button onClick={handleStop} disabled={!isRunning}>Parar</button>\r\n            </div>\r\n\r\n            <h3>Buffer</h3>\r\n            <div className=\"buffer-container\">\r\n                {buffer.map((slot, index) => (\r\n                    <div key={index} className={`buffer-slot ${slot.state}`}>\r\n                        {slot.state === 'full' ? slot.item : ''}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProducerConsumer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}